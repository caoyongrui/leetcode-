/*
给定一个非空的字符串，判断它是否可以由它的一个子串重复多次构成。给定的字符串只含有小写英文字母，并且长度不超过10000。

示例 1:

输入: "abab"

输出: True

解释: 可由子字符串 "ab" 重复两次构成。
示例 2:

输入: "aba"

输出: False
示例 3:

输入: "abcabcabcabc"

输出: True

解释: 可由子字符串 "abc" 重复四次构成。 (或者子字符串 "abcabc" 重复两次构成。)
*/

#include <iostream>
#include <string>
using namespace std;

//周期性判断
bool repeatedSubstringPattern(string s)
{
	int len = s.length();
	for (int i = 1; i <= len / 2; i++)
	{
		if (len % i)
			continue;
		int j = 0;
		for (j = 0; j < len && s[j % i] == s[j]; j++);
		if (j == len)
			return true;
	}
	return false;
}

int main()
{
	string s = "abab";
	bool res = repeatedSubstringPattern(s);
	cout.setf(ios_base::boolalpha);
	cout << res << endl;

	system("pause");
	return 0;
}